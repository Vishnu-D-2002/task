
Queries for all questions :

1 . Find all the topics and tasks which are thought in the month of October

    query :
    -----
        db.topics.aggregate([
        {
            $match: {
            $or: [
                { start_date: { $gte: "2020-10-01", $lte: "2020-10-31" } },
                { end_date: { $gte: "2020-10-01", $lte: "2020-10-31" } }
            ]
            }
        },
        {
            $lookup: {
            from: "tasks",
            localField: "topic_id",
            foreignField: "user_id",
            as: "tasks_info"
            }
        },
        {
            $project: {
            _id: 0,
            topic_name: 1,
            start_date: 1,
            end_date: 1,
            "tasks_info.task_name": 1,
            "tasks_info.submission_date": 1
            }
        }
        ]);


    Output :
    ------
        {
        topic_name: 'Software Testing and QA',
        start_date: '2020-09-25',
        end_date: '2020-10-25',
        tasks_info: [
            {
            task_name: 'AI Ethics Research Paper',
            submission_date: '2020-10-10'
            }
        ]
        }
        {
        topic_name: 'UI/UX Design Principles',
        start_date: '2020-10-10',
        end_date: '2020-11-10',
        tasks_info: [
            {
            task_name: '3D Printing Prototype',
            submission_date: '2020-11-20'
            }
        ]
        }

    Another Method :
    --------------
        db.topics.aggregate([
        {
            $lookup: {
            from: "tasks",
            localField: "topic_id",
            foreignField: "user_id",
            as: "task"
            }
        }
        ]).forEach( doc => {
        if( (doc.start_date >= "2020-10-01" && doc.start_date <= "2020-10-31") ||
        (doc.end_date >= "2020-10-01" && doc.end_date <= "2020-10-31"))
        {
        print("Topic :" + doc.topic_name +" , " + "Task : " + doc.task[0].task_name )
        }
        });

    Output :
    ------
        Topic : Software Testing and QA , Task : AI Ethics Research Paper
        Topic : UI/UX Design Principles , Task : 3D Printing Prototype

--------------------------------------------------------------------------------------------------------------------------

2 . Find all the company drives which appeared between 15 oct-2020 and 31-oct-2020

    query :
    -----
        db.company_drives.aggregate([
        {
            $match:{
                $and:[
            {drive_date:{$gte:"2020-10-15"}},
            {drive_date:{$lte:"2020-10-31"}}
        ]
        }
        },
        {
        $project:{
        _id:0,
        company_name:1,
        drive_date:1
        }
        }
        ]);

    Output :
    ------
        {
        company_name: 'TechInnovate',
        drive_date: '2020-10-17'
        }
        {
        company_name: 'InnoSolutions',
        drive_date: '2020-10-20'
        }  

-----------------------------------------------------------------------------------------------------------------

3 . Find all the company drives and students who are appeared for the placement.

    query :
    -----
        db.company_drives.find({status:"Appeared"});
            - (it will give output in json object ,i'm included object in JSON-Output folder)

        (OR)

        db.company_drives.aggregate([
        {
            $match:{
            status:"Appeared"
        }
        },
        {
            $lookup:{
            from:"users",
            localField:"user_id",
            foreignField:"user_id",
            as:"user"
        }
        }
        ]).forEach( doc => {
        print(doc.user[0].name +" , "+ doc.company_name +" , " + doc.drive_date +" , "+ doc.status)
        });

    Output :
    ------
        John Doe , TechCorp , 2020-01-20 , Appeared
        Michael Johnson , InnovateTech , 2020-03-25 , Appeared
        Daniel Wilson , CodeInnovators , 2020-05-10 , Appeared
        Ethan Brown , InnoSoft , 2020-07-05 , Appeared
        Matthew Taylor , CodeCrafters , 2020-09-25 , Appeared
        James Harris , InnoSolutions , 2020-10-20 , Appeared

--------------------------------------------------------------------------------------------------------------------------

4 . Find the number of problems solved by the user in codekata

    query : 
    -----
        db.codekata.find().forEach(function(doc) {
        print("User ID: " + doc.user_id + ", Total Problems Solved: " + doc.total_problems_solved);
        });

    Output :
    ------
        User ID: 1, Total Problems Solved: 10
        User ID: 2, Total Problems Solved: 15
        User ID: 3, Total Problems Solved: 8
        User ID: 4, Total Problems Solved: 20
        User ID: 5, Total Problems Solved: 12
        User ID: 6, Total Problems Solved: 18
        User ID: 7, Total Problems Solved: 14
        User ID: 8, Total Problems Solved: 22
        User ID: 9, Total Problems Solved: 25
        User ID: 10, Total Problems Solved: 16
        User ID: 11, Total Problems Solved: 19
        User ID: 12, Total Problems Solved: 11

-------------------------------------------------------------------------------------------------------------------------------------------------

5 . Find all the mentors with who has the mentee's count more than 15

    query :
    -----
        db.mentors.find().forEach(doc => {
        if (doc.mentee_count > 15) {
            print("Mentor Name: " + doc.mentor_name + ", Mentees Count: " + doc.mentee_count);
        }
        });

    Output :
    ------
        Mentor Name: John Smith, Mentees Count: 20
        Mentor Name: Emma Johnson, Mentees Count: 18
        Mentor Name: Michael Davis, Mentees Count: 22
        Mentor Name: Daniel Wilson, Mentees Count: 25
        Mentor Name: Olivia Martinez, Mentees Count: 21
        Mentor Name: Liam Taylor, Mentees Count: 19
        Mentor Name: Ava Anderson, Mentees Count: 16
        Mentor Name: Noah Wilson, Mentees Count: 23
        Mentor Name: Isabella Garcia, Mentees Count: 20
        Mentor Name: Mason Smith, Mentees Count: 18
        Mentor Name: Amelia Davis, Mentees Count: 22

----------------------------------------------------------------------------------------------------------------------------------------------

6 . Find the number of users who are absent and task is not submitted  between 15 oct-2020 and 31-oct-2020

    query :

            db.tasks.aggregate([
            {
                $lookup: {
                from: "attendance",
                localField: "user_id",
                foreignField: "user_id",
                as: "attendance_info"
                }
            },
            {
                $project: {
                _id:0,
                user_id: 1,
                task_name: 1,
                submission_date: 1,
                attendance_status: "$attendance_info.status",
                }
            }
            ]);